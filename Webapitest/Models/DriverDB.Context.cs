//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webapitest.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SampleEntities : DbContext
    {
        public SampleEntities()
            : base("name=SampleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tbl_Driver> Tbl_Driver { get; set; }
    
        public virtual ObjectResult<Sp_Emplyee_Result> Sp_Emplyee(Nullable<int> iD, string command)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Emplyee_Result>("Sp_Emplyee", iDParameter, commandParameter);
        }
    
        public virtual ObjectResult<Sp_Driver_Result> Sp_Driver(Nullable<int> iD, string name, string command)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Driver_Result>("Sp_Driver", iDParameter, nameParameter, commandParameter);
        }
    
        public virtual int spdriver(Nullable<int> iD, string name, string command)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdriver", iDParameter, nameParameter, commandParameter);
        }
    }
}
